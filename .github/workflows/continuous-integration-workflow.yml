name: Continuous Integration
on: 
  push:                      # Will make the workflow run every time you push to any branch
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code

    - name: Build and test DotNet
      uses: Elskom/build-dotnet@v1.1.1

    - name: TypeScript install
      working-directory: ./DotnetTemplate.Web
      run: npm install

    - name: TypeScript build
      working-directory: ./DotnetTemplate.Web
      run: npm run build

    - name: Linter run
      working-directory: ./DotnetTemplate.Web
      run: npm run lint

    - name: Typescript run tests
      working-directory: ./DotnetTemplate.Web
      run: npm t

  push_to_registry:
    needs: build
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: rogvan/dotnettemplate
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  redeploy_azure:
    name: Triggers Azure to redploy with the latest Docker Image
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: make request to redeployment url
        run: curl -dh -X POST --fail ${{ secrets.AZURE_REDEPLOYMENT_WEBHOOK }}

  slack-workflow-status:
    if: always()
    name: Post workflow status to Slack
    needs: 
      - build
      - push_to_registry
      - redeploy_azure
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: come25136/workflow-notification-for-slack@main
        with:
          # Required Input
          repo_token: ${{secrets.REPO_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
